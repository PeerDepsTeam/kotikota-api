import org.apache.tools.ant.taskdefs.condition.Os
import org.openapitools.generator.gradle.plugin.tasks.GenerateTask

plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.2'
	id 'io.spring.dependency-management' version '1.1.4'
	id 'org.asciidoctor.jvm.convert' version '3.3.2'
	id 'org.openapi.generator' version '5.3.0'
}


repositories {

	mavenCentral()
}

java {
	group = 'com.pjlegacy.base'
	sourceCompatibility = '17'
	targetCompatibility = '17'
}


configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenLocal()
	mavenCentral()
}

ext {
	set('snippetsDir', file("build/generated-snippets"))
}


task generateJavaClient(type: GenerateTask) {
	generatorName = "java"
	inputSpec = "$rootDir/doc/api.yml".toString()
	outputDir = "$buildDir/gen".toString()
	apiPackage = "com.pjlegacy.base.endpoint.rest.api"
	invokerPackage = "com.pjlegacy.base.endpoint.rest.client"
	modelPackage = "com.pjlegacy.base.endpoint.rest.model"

	configOptions = [
			serializationLibrary: "jackson",
			dateLibrary: "custom"
	]
	typeMappings = [
			// What date-time type to use when? https://i.stack.imgur.com/QPhGW.png
			Date: "java.time.LocalDate",
			DateTime: "java.time.Instant",
	]
	library = "native"

	groupId = 'com.pjlegacy'
	id = 'peerdeps'
	skipValidateSpec = false
	logToStderr = true
	generateAliasAsModel = false
	enablePostProcessFile = false
}

task publishJavaClientToMavenLocal(type: Exec, dependsOn: generateJavaClient) {
	if (Os.isFamily(Os.FAMILY_WINDOWS)){
		commandLine './publish_gen_to_maven_local.bat'
	} else {
		commandLine './publish_gen_to_maven_local.sh'
	}
}
tasks.compileJava.dependsOn publishJavaClientToMavenLocal

dependencies {
	implementation 'com.pjlegacy:peerdeps:latest'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'com.google.firebase:firebase-admin:9.2.0'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.projectlombok:lombok'


	implementation 'com.pjlegacy:peerdeps:latest'
}

tasks.named('test') {
	outputs.dir snippetsDir
	useJUnitPlatform()
}

tasks.named('asciidoctor') {
	inputs.dir snippetsDir
	dependsOn test
}
